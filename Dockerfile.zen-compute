# Production Docker Image for zen-compute v1.0
FROM rust:1.88-slim as builder

# Install system dependencies for GPU support
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    clang \
    cmake \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /usr/src/zen-neural-stack

# Copy workspace configuration
COPY Cargo.toml Cargo.lock ./
COPY zen-compute/Cargo.toml zen-compute/build.rs ./zen-compute/

# Pre-build dependencies
RUN mkdir -p zen-compute/src \
    && echo "fn main() {}" > zen-compute/src/main.rs \
    && echo "pub fn dummy() {}" > zen-compute/src/lib.rs \
    && cargo build --release --package zen-compute \
    && rm -rf zen-compute/src

# Copy source code
COPY zen-compute/ ./zen-compute/

# Build production binary with WebGPU support
RUN cargo build --release --package zen-compute --features webgpu

# Runtime image with GPU support
FROM nvidia/cuda:12.3-runtime-ubuntu22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libc6 \
    libssl3 \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -r -s /bin/false -m zen-compute

# Copy binary and libraries
COPY --from=builder /usr/src/zen-neural-stack/target/release/libzen_compute.so /usr/local/lib/
COPY --from=builder /usr/src/zen-neural-stack/target/release/libzen_compute.a /usr/local/lib/

# Update library path
RUN ldconfig

# Set permissions
RUN chown zen-compute:zen-compute /usr/local/lib/libzen_compute.*

# Switch to app user
USER zen-compute

# Expose ports for compute services
EXPOSE 4002

# Environment variables for GPU access
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD echo "zen-compute ready" || exit 1

# Default command - library ready for use
CMD ["echo", "zen-compute v1.0 ready - Universal GPU Acceleration Library"]