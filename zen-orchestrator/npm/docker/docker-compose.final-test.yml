version: '3.8'

services:
  # Node.js 18 Test
  node18-test:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        NODE_VERSION: "18"
    container_name: ruv-swarm-node18-test
    environment:
      - NODE_ENV=test
      - TEST_SUITE=node18
    command: |
      sh -c "
        echo '🐳 Node.js 18 Test Starting...'
        node --version
        npm --version
        echo '📦 Testing WASM loading...'
        node test-wasm-loading.js
        echo '🎯 Testing NPX commands...'
        npx . --version
        npx . mcp start &
        sleep 2
        pkill -f 'mcp start' || true
        echo '✅ Node.js 18 Test Complete!'
      "

  # Node.js 20 Test
  node20-test:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        NODE_VERSION: "20"
    container_name: ruv-swarm-node20-test
    environment:
      - NODE_ENV=test
      - TEST_SUITE=node20
    command: |
      sh -c "
        echo '🐳 Node.js 20 Test Starting...'
        node --version
        npm --version
        echo '📦 Testing WASM loading...'
        node test-wasm-loading.js
        echo '🎯 Testing NPX commands...'
        npx . --version
        npx . status
        echo '✅ Node.js 20 Test Complete!'
      "

  # Node.js 22 Test
  node22-test:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        NODE_VERSION: "22"
    container_name: ruv-swarm-node22-test
    environment:
      - NODE_ENV=test
      - TEST_SUITE=node22
    command: |
      sh -c "
        echo '🐳 Node.js 22 Test Starting...'
        node --version
        npm --version
        echo '📦 Testing WASM loading...'
        node test-wasm-loading.js
        echo '🎯 Testing NPX commands...'
        npx . --version
        npx . help
        echo '✅ Node.js 22 Test Complete!'
      "

  # NPX Command Suite Test
  npx-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: ruv-swarm-npx-test
    environment:
      - NODE_ENV=test
      - TEST_SUITE=npx-commands
    command: |
      sh -c "
        echo '🎯 NPX Command Suite Test Starting...'
        echo 'Testing all NPX capabilities...'
        npx . --version
        npx . help
        npx . init mesh 5 --claude --dry-run || true
        npx . spawn researcher 'Test Agent' --dry-run || true
        npx . status || true
        npx . neural status || true
        npx . benchmark list || true
        npx . performance status || true
        echo '✅ NPX Command Suite Test Complete!'
      "

  # WASM Validation Test
  wasm-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: ruv-swarm-wasm-test
    environment:
      - NODE_ENV=test
      - TEST_SUITE=wasm-validation
    command: |
      sh -c "
        echo '🧬 WASM Validation Test Starting...'
        node test-wasm-loading.js
        echo '🔍 Checking WASM files...'
        ls -la wasm/*.wasm
        echo '📊 WASM Memory Test...'
        node -e \"
          import('./src/wasm-loader.js').then(async (module) => {
            const loader = new module.default();
            await loader.initialize('progressive');
            const core = await loader.loadModule('core');
            console.log('Memory allocated:', core.memory.buffer.byteLength, 'bytes');
            console.log('Is placeholder:', core.isPlaceholder || false);
            process.exit(core.isPlaceholder ? 1 : 0);
          });
        \"
        echo '✅ WASM Validation Test Complete!'
      "

networks:
  default:
    name: ruv-swarm-test-network